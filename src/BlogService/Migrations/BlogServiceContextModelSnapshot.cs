// <auto-generated />
using System;
using BlogService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogService.Migrations
{
    [DbContext(typeof(BlogServiceContext))]
    partial class BlogServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogService.Models.Author", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bio");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<string>("UserName");

                    b.HasKey("ID");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BlogService.Models.Blog", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorID");

                    b.Property<string>("Body");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("AuthorID");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("BlogService.Models.Blog", b =>
                {
                    b.HasOne("BlogService.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorID");
                });
#pragma warning restore 612, 618
        }
    }
}
